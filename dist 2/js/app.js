(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var todo_service_1 = require("./service/todo.service");

var TodoList =
/** @class */
function () {
  function TodoList(todos) {
    this.todoService = new todo_service_1.TodoService(todos);
  } // todoToggleState(todo: Todo){
  // 	this.todoService.toggleState(todo);
  // }


  TodoList.prototype.todoCountTask = function (countElement) {
    return this.todoService.countTask(countElement);
  };

  TodoList.prototype.todoAddTask = function (input) {
    this.todoService.render(input);
  };

  TodoList.prototype.todoInit = function () {
    var _this = this;

    var todoInput = document.getElementById('todoInput');
    var todoFooter = document.querySelector('.td__footer');
    var todoCount = document.querySelector('.td__header-count');
    var todoToggle = document.getElementsByClassName('td__body-task');
    todoInput.addEventListener('keypress', function (event) {
      if (event.key === 'Enter') {
        _this.todoAddTask(todoInput.value);

        todoInput.value = '';
        todoFooter.style.display = 'flex';
        todoCount.innerHTML = _this.todoCountTask(todoCount);
      }
    }); // document.addEventListener('click', event => {
    // 	if ((<HTMLElement>event.target).classList.contains('td__body-task')) {
    // 		console.log(123);
    // 		this.todoToggleState();
    // 	}
    // }, false)
  };

  return TodoList;
}();

var todoApp = new TodoList([]);
todoApp.todoInit();

},{"./service/todo.service":2}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var state = false;

var TodoService =
/** @class */
function () {
  function TodoService(todos) {
    // state: boolean = false;
    this.id = 0;
    this.todos = [];
  }

  TodoService.prototype.generateId = function (length) {
    var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHUJKLMNOPQRSTUVWXYZ';
    var ID = '';

    for (var i = 0; i < length; i += 1) {
      ID += chars.charAt(Math.floor(Math.random() * chars.length));
    }

    return 'task-' + ID;
  };

  TodoService.prototype.addTask = function (task) {
    var todo = {
      id: this.generateId(4),
      name: task,
      state: false
    };
    this.todos.push(todo);
    console.log(this.todos);
    return todo;
  };

  TodoService.prototype.renderTodo = function (task) {
    var container = document.getElementById('bodyTasks');
    var html, newHtml, htmlDom;
    html = "<li class=\"td__body-task" + (task.state === true ? ' td__body-task--complete' : '') + "\" data-id=\"" + task.id + "\" data-state=\"" + (task.state === true ? 'complete' : 'active') + "\">\n\t\t\t\t\t<input class=\"td__body-task--toggle\" type=\"checkbox\">\n\t\t\t\t\t<span>" + task.name + "</span>\n\t\t\t\t\t<button class=\"td__body-task--destroy\" data-id=\"" + task.id + "\"><i class=\"mdi mdi-window-close\"></i></button>\n\t\t\t\t</li>";
    container.insertAdjacentHTML("beforeend", html);
  };

  TodoService.prototype.render = function (input) {
    var _this = this;

    var newItem;
    newItem = this.addTask(input);
    this.renderTodo(newItem);
    var findId = document.querySelector("[data-id=\"" + newItem.id + "\"]");
    console.log(findId);

    if (findId) {
      findId.addEventListener('click', function (event) {
        _this.toggleState(newItem);

        findId.remove();

        _this.renderTodo(newItem);

        console.log(findId);
      });
    }
  };

  TodoService.prototype.clearCompleteTask = function () {
    this.todos = this.todos.filter(function (todo) {
      return todo.state === true;
    });
  };

  TodoService.prototype.allTask = function () {
    return this.todos.slice();
  };

  TodoService.prototype.activeTask = function () {
    return this.todos = this.todos.filter(function (todo) {
      return todo.state === false;
    });
  };

  TodoService.prototype.completeTask = function () {
    return this.todos = this.todos.filter(function (todo) {
      return todo.state === true;
    });
  };

  TodoService.prototype.countTask = function (countElement) {
    if (this.todos.length > 0) {
      countElement.style.display = 'block';
    } else {
      countElement.style.display = 'none';
    }

    return String(this.todos.length);
  };

  TodoService.prototype.renderAfterClick = function (todo, container) {
    for (todo in this.todos) {
      if (this.todos.hasOwnProperty(todo)) {
        var element = this.todos[todo];

        if (element.id) {
          container.insertAdjacentHTML('beforeend', this.renderTodo(element));
        }
      }
    }
  };

  TodoService.prototype.toggleState = function (todo) {
    todo.state = !todo.state;
    return todo.state;
  };

  TodoService.prototype.destroyTask = function () {};

  return TodoService;
}();

exports.TodoService = TodoService;

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
